{"ast":null,"code":"import _classCallCheck from\"/home/ainura/Desktop/my_robot_react_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ainura/Desktop/my_robot_react_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ainura/Desktop/my_robot_react_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ainura/Desktop/my_robot_react_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import CardList from'../components/CardList.js';import SearchBox from'../components/SearchBox';import Scroll from'../components/Scroll';import ErrorBoundry from'../components/ErrorBoundry';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);//как моделька имеет два свойства, это список роботов(в CardList) и поле для поиска (SearchBox)\n_this.onSearchEvent=function(event){_this.setState({searchfield:event.target.value});};_this.state={robots:[],searchfield:''};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('https://jsonplaceholder.typicode.com/users')//отправить url где есть arrays with objects\n.then(function(reponse){return reponse.json();})//полученный ответ конвертируй в json\n.then(function(users){return _this2.setState({robots:users});});//users определить в параметр robots\n}//this.setState - modify state\n},{key:\"render\",value:function render(){var _this3=this;//фильтр по тому что человек вводит в поле поиск, в маленькими буквами это включает то, что написано в searchfield\nvar filteredRobots=this.state.robots.filter(function(robot){return robot.name.toLowerCase().includes(_this3.state.searchfield.toLowerCase());});return/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"f1\",children:\"RoboFriends\"}),/*#__PURE__*/_jsx(SearchBox,{searchChange:this.onSearchEvent}),/*#__PURE__*/_jsx(Scroll,{children:/*#__PURE__*/_jsx(ErrorBoundry,{children:/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})})})]});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/ainura/Desktop/my_robot_react_project/src/containers/App.js"],"names":["React","Component","CardList","SearchBox","Scroll","ErrorBoundry","App","onSearchEvent","event","setState","searchfield","target","value","state","robots","fetch","then","reponse","json","users","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,YAAP,KAA0B,4BAA1B,CAGA,MAAO,WAAP,C,2FAGMC,CAAAA,G,0FACF,cAAa,qCACT,wBACA;AAFS,MAgBbC,aAhBa,CAgBG,SAACC,KAAD,CAAU,CACtB,MAAKC,QAAL,CAAc,CAACC,WAAW,CAAEF,KAAK,CAACG,MAAN,CAAaC,KAA3B,CAAd,EAGH,CApBY,CAGT,MAAKC,KAAL,CAAa,CACTC,MAAM,CAAC,EADE,CAETJ,WAAW,CAAC,EAFH,CAAb,CAHS,aAOZ,C,iDAED,4BAAmB,iBACfK,KAAK,CAAC,4CAAD,CAA+C;AAApD,CACKC,IADL,CACU,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,IAAR,EAAJ,EADjB,CACqC;AADrC,CAEKF,IAFL,CAEU,SAAAG,KAAK,QAAI,CAAA,MAAI,CAACV,QAAL,CAAc,CAACK,MAAM,CAACK,KAAR,CAAd,CAAJ,EAFf,EAEmD;AACtD,CAED;sBAMA,iBAAS,iBACL;AACA,GAAMC,CAAAA,cAAc,CAAG,KAAKP,KAAL,CAAWC,MAAX,CAAkBO,MAAlB,CAAyB,SAAAC,KAAK,CAAG,CACpD,MAAOA,CAAAA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,MAAI,CAACZ,KAAL,CAAWH,WAAX,CAAuBc,WAAvB,EAAlC,CAAP,CACH,CAFsB,CAAvB,CAGA,mBACI,aAAK,SAAS,CAAC,IAAf,wBACI,WAAI,SAAS,CAAC,IAAd,yBADJ,cAEI,KAAC,SAAD,EAAW,YAAY,CAAE,KAAKjB,aAA9B,EAFJ,cAGI,KAAC,MAAD,wBACI,KAAC,YAAD,wBACI,KAAC,QAAD,EAAU,MAAM,CAAEa,cAAlB,EADJ,EADJ,EAHJ,GADJ,CAYH,C,iBAvCanB,S,EA0ClB,cAAeK,CAAAA,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport CardList from '../components/CardList.js';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry  from '../components/ErrorBoundry';\n\n\nimport './App.css'\n\n\nclass App extends Component {\n    constructor(){\n        super();\n        //как моделька имеет два свойства, это список роботов(в CardList) и поле для поиска (SearchBox)\n        this.state = {\n            robots:[],\n            searchfield:''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users') //отправить url где есть arrays with objects\n            .then(reponse => reponse.json()) //полученный ответ конвертируй в json\n            .then(users => this.setState({robots:users})); //users определить в параметр robots\n    }\n        \n    //this.setState - modify state\n    onSearchEvent = (event) =>{\n        this.setState({searchfield: event.target.value})\n        \n   \n    }\n    render() {\n        //фильтр по тому что человек вводит в поле поиск, в маленькими буквами это включает то, что написано в searchfield\n        const filteredRobots = this.state.robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        })\n        return(\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchEvent}/>                \n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundry>                    \n                </Scroll>\n                \n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}